package cpm.goomo.repository;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;

import javax.persistence.EntityManager;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.context.junit4.SpringRunner;

import com.goomo.jpa.AdvJPAProject.AdvJpaProjectApplication;
import com.goomo.jpa.AdvJPAProject.Entity.Course;
import com.goomo.jpa.AdvJPAProject.Entity.Student;
import com.goomo.jpa.AdvJPAProject.Reopsitory.CourseRepository;
import com.goomo.jpa.AdvJPAProject.Reopsitory.StudentRepository;
@RunWith(SpringRunner.class)
@SpringBootTest(classes = AdvJpaProjectApplication.class)
public class StudentRepositoryTest {
	private Logger logger = LoggerFactory.getLogger(this.getClass());
	@Autowired
	StudentRepository studentRepo;
	@Autowired 
	EntityManager em;
	@Test
	@DirtiesContext
	public void retrieveStudentAndPassportDetails() {
		Student student = em.find(Student.class,40001L); 
		logger.info("Student ->{}",student);
		logger.info("Passport details ",student.getPassport());
	}

	@Test
	@DirtiesContext
	public void deleteByIdTest() {
		courserepo.deleteById(10002L);
		assertNull(courserepo.findById(10002L));
	}

	@Test
	@DirtiesContext
	public void save() {
		// get the course
		Course course = courserepo.findById(10001L);
		assertEquals("Java EE", course.getName());
		// up[date the details of course
		course.setName("Selenium updated");
		courserepo.save(course);
		// check the value
		Course course1 = courserepo.findById(10001L);
		assertEquals("Selenium updated", course1.getName());

		// assertNull(courserepo.findById(10002L));
	}

	@Test
	@DirtiesContext
	public void playWithEntitymanager() {
		courserepo.playWithEntitymanager();

	}
}
